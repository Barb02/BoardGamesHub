version: '3'
services:
  postgres:
    image: postgres:15-alpine
    container_name: boardgameshub-db
    environment:
      POSTGRES_DB: boardgameshub-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./boardgameshubSpring/src/main/resources/db/:/docker-entrypoint-initdb.d/
    ports:
      - "5433:5432"
    restart: unless-stopped

  springboot:
    depends_on:
      - postgres
    build:
      context: ./boardgameshubSpring
      dockerfile: Dockerfile
    volumes:
      - ./boardgameshubSpring:/app
      - ./boardgameshubSpring/.m2:/root/.m2
    working_dir: /app
    command: sh run.sh
    ports:
      - 8080:8080
      - 35729:35729
      - 5005:5005

  web:
    depends_on:
      - postgres
      - springboot
    build:
      context: ./boardgameshubWeb
      dockerfile: .docker/Dockerfile
    restart: unless-stopped
    volumes:
      - "./boardgameshubWeb/:/webApp"
    ports:
      - 3000:3000
    command: >
      bash -c "cp -rfu /cache/node_modules/. /webApp/node_modules/  
      && npm start"

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    env_file:
      - broker.env

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  python_script:
    image: python:3.9
    volumes:
      - ./dataGeneration:/app 
    working_dir: /app
    command: >
      bash -c "pip install -r requirements.txt && python3 -u gen_price_changes.py"

volumes:
  pgdata:
    driver: local
